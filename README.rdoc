== README

=== Goal:

* Have a controller (BooksController) call a Class method in another class (FetchMetadata) which calls another controller (BookMetadataController) to get json


=== To test:

* from http://localhost:3000/books add at least one book
* TEST:  http://localhost:3000/books/1


=== Classes of interest:

* app/controllers/book_metadata_controller.rb
  * route #metadata sets up metadata (hardcoded) and uses json view to produce json
* app/controllers/books_controller.rb
  * route #show calls fetch_metadata and wants to receive back the metadata json
* lib/fetch_metadata.rb
  * calls book_metadata_controller's #metadata route to get the json -- FAILS

=== Approaches

lib/fetch_metadata.rb tests multiple approaches to calling book_metadata_controller#metadata to get the json.  None work.

* Net::HTTP - direct calls
* Net::HTTP using HTTParty gem
* Curl using Curb gem
* several attempts to use Rails Dispatch


=== Observations

==== Observation #1

Net::HTTP and Curl time out from within the app.  Curl with the same URL in the terminal returns json within a second.

So... BookMetadataController is callable via Curl


==== Observation #2

After the timeout of Curl, BookMetadataController.metadata is called twice.  The json is never returned to FetchMetadata.do_fetch because the timeout has already thrown an exception in that method.

So...  Guessing that the call to the second route waits for the first route to complete before executing.  Not at all sure why the second route is called twice.

